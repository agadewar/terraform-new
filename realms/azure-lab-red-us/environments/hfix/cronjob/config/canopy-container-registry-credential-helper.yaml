apiVersion: batch/v1beta1
kind: CronJob
metadata:
  annotations:
  name: canopy-container-registry-credential-helper
  namespace: qa
spec:
  concurrencyPolicy: Allow 
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          serviceAccountName: sapience-deploy
          containers:
          - image: odaniait/aws-kubectl:latest
            imagePullPolicy: IfNotPresent
            name: regcred-helper
            resources:
              limits:
                memory: "64M"
                cpu: "60m"
              requests:
                memory: "40M"
                cpu: "20m"
            command:
            - /bin/sh
            - -c
            - |-
              ACCOUNT=406661537381   # banyanhills-lab
              REGION=us-east-1
              SECRET_NAME=canopy-container-registry-credential
              EMAIL=steve.ardis@banyanhills.com
              TOKEN=`aws ecr get-login --registry-ids ${ACCOUNT} | cut -d' ' -f6`;
              echo "ENV variables setup done"
              kubectl delete secret --ignore-not-found $SECRET_NAME
              kubectl create secret docker-registry $SECRET_NAME \
              --docker-server=https://${ACCOUNT}.dkr.ecr.${REGION}.amazonaws.com \
              --docker-username=AWS \
              --docker-password="${TOKEN}" \
              --docker-email="${EMAIL}"
              echo "Job completed successfully"
            env:
            - name: AWS_DEFAULT_REGION
              value: us-east-1
            - name: AWS_SECRET_ACCESS_KEY 
              valueFrom:
                secretKeyRef:
                  name: banyan-aws
                  key: aws_secret_access_key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: banyan-aws
                  key: aws_access_key_id 
            securityContext:
              capabilities: {}
            terminationMessagePath: /dev/termination-log  
            terminationMessagePolicy: File
          dnsPolicy: Default
          hostNetwork: true
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  schedule: 0 */6 * * *   # every 6 hours
  successfulJobsHistoryLimit: 3
  suspend: false
